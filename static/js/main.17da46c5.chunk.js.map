{"version":3,"sources":["static-photos/2x/logo.png","const/Routes.js","redux/auth/authConstants.js","api/baseApi.js","api/authApi.js","redux/auth/authSlice.js","helpers/toaster-helper.js","redux/auth/authSaga.js","redux/news/newsConstants.js","api/newsApi.js","redux/news/newsSlice.js","redux/news/newsSagas.js","redux/rootReducer.js","redux/rootSaga.js","helpers/history.js","redux/store.js","components/auth/auth.js","redux/news/newsSelectors.js","components/News/NewsPost/NewsPost.js","components/News/News.js","components/Header/Header.js","components/AuthorizedRoute.js","components/NonAuthorizedRoute.js","redux/auth/authSelectors.js","components/FreeRooms/FreeRooms.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Routes","EmptyRoute","MainRoute","Erud","Rating","Files","FreeRooms","AUTH_ACTION_TYPES","AUTH","LOGOUT","API_URL","process","authApi","auth","login","password","a","axios","get","response","status","token","data","defaults","headers","common","Authorization","localStorage","setItem","getItem","initAuthorization","initialState","userId","authSlice","createSlice","name","reducers","setAuthData","state","action","payload","logout","authActions","actions","error","string","toast","checkAuthStatusSaga","authSaga","logoutSaga","sagas","savedToken","jwtDecode","put","console","call","removeItem","push","all","takeLatest","authSagas","NEWS_ACTION_TYPES","GET","UNSET","newsApi","getNews","page","newsAtPage","count","news","newsSlice","setNews","log","clearNews","newsActions","message","includes","history","newsSagas","rootSaga","fork","createBrowserHistory","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","form","formReducer","router","connectRouter","authReducer","newsReducer","composeWithDevTools","applyMiddleware","routerMiddleware","runSaga","saga","run","authPageCn","cn","AuthPage","reduxForm","dispatch","useDispatch","promoCodeForm","formValueSelector","useSelector","className","src","logo","alt","onSubmit","e","preventDefault","handleForm","Field","component","placeholder","type","getNewsSelector","createSelector","PostCn","NewsPost","id","title","content","url","published","loaded","source","urlToImage","key","href","match","length","linkTarget","disallowedTypes","NewsCN","News","useEffect","map","el","headerCN","Header","props","pathname","location","to","active","AuthorizedRoute","Component","isAuthorized","rest","render","routeProps","NonAuthorizedRoute","isAuthorizedSelector","connect","exact","path","withNavigation","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17da46c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e4b29469.png\";","export const Routes = {\n    EmptyRoute: '/',\n    MainRoute: '/news',\n    Erud: '/erad',\n    Rating: '/rating',\n    Files: '/files',\n    FreeRooms: '/free-rooms'\n\n}\n","export const AUTH_ACTION_TYPES = {\n    AUTH: 'auth/auth',\n    LOGOUT: 'auth/logout',\n};","export const API_URL = process.env.REACT_APP_API_URL;","import axios from 'axios';\n\nimport { API_URL } from './baseApi'\nexport const authApi = {\n    auth: async (login, password ) =>{\n        const response = await axios.get(`${API_URL}/auth?login=${login}&password=${password}`);\n        if (response.status === 200){\n            const token =  response.data.token;\n\n            axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n            localStorage.setItem('authToken', token);\n        }\n    }\n}\nexport const initAuthorization = () => {\n    const token = localStorage.getItem('authToken');\n\n    if (token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    }\n};\n\ninitAuthorization();","import { createSlice } from 'redux-starter-kit';\n\nconst initialState = { userId: null, token: null };\n\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setAuthData(state, action) {\n            const { token, userId } = action.payload;\n            return {\n                ...state,\n                token,\n                userId,\n            };\n        },\n        logout() {\n            return {\n                ...initialState,\n            };\n        },\n        auth({login, password}) {},\n    },\n});\n\nexport const authActions = authSlice.actions;\n\nexport default authSlice.reducer;\n","import {toast } from 'react-toastify';\nexport const error = string => toast.error('🤦‍♂️' + string);\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport jwtDecode from 'jwt-decode';\n\nimport { Routes } from '../../const/Routes';\nimport { AUTH_ACTION_TYPES } from './authConstants';\nimport {authApi} from \"../../api/authApi\";\nimport {authActions} from './authSlice'\nimport {error} from \"../../helpers/toaster-helper\";\n\nfunction* checkAuthStatusSaga() {\n    try {\n        const savedToken = localStorage.getItem('authToken');\n\n        if (savedToken) {\n            const { userId } = jwtDecode(savedToken);\n            yield put(authActions.setAuthData({ token: savedToken, userId: userId }));\n        }\n    } catch (err) {\n        console.error('checkAuthStatusSaga error', err);\n    }\n}\n\nfunction* authSaga({ payload }) {\n    try {\n        yield authApi.auth(payload.login, payload.password);\n        yield call(checkAuthStatusSaga);\n    } catch (err) {\n        if (err.response && err.response.status === 400) {\n            error('Authorization error')\n        }\n        console.error('authSaga error', err);\n    }\n}\nfunction* logoutSaga() {\n    localStorage.removeItem('authToken');\n    yield put(push(Routes.EmptyRoute));\n}\nfunction* sagas() {\n    yield all([\n        call(checkAuthStatusSaga),\n        takeLatest(AUTH_ACTION_TYPES.AUTH, authSaga),\n        takeLatest(AUTH_ACTION_TYPES.LOGOUT, logoutSaga),\n    ]);\n}\nexport const authSagas = sagas;\n","export const NEWS_ACTION_TYPES = {\n    GET: 'news/getNews',\n    UNSET: 'auth/clearNews',\n};\n","import axios from \"axios\";\nimport {API_URL} from \"./baseApi\";\n\nexport const newsApi = {\n    getNews: async (page, newsAtPage ) =>{\n        return await axios.get(`${API_URL}/newsList?page=${page}&newsAtPage=${newsAtPage}`);\n    }\n}\n","import { createSlice } from 'redux-starter-kit';\n\nconst initialState = {page: 0, newsAtPage: 0, count: 0, news: []};\n\n\nconst newsSlice = createSlice({\n    name: 'news',\n    initialState,\n    reducers: {\n       getNews({page, count}){},\n        setNews(state, news){\n           console.log(state, news)\n            return {\n                page: news.payload.page,\n                newsAtPage: news.payload.newsAtPage,\n                count: news.payload.count,\n                news: news.payload.news\n            }\n        },\n        clearNews() {\n            return {\n                ...initialState,\n            };\n        },\n        auth({login, password}) {},\n    },\n});\n\nexport const newsActions = newsSlice.actions;\n\nexport default newsSlice.reducer;\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\nimport {NEWS_ACTION_TYPES} from \"./newsConstants\";\nimport {newsApi} from \"../../api/newsApi\";\nimport {error} from \"../../helpers/toaster-helper\";\nimport {newsActions} from \"./newsSlice\";\n\nfunction* getNews({payload}) {\n   const {page, newsAtPage} = payload;\n   try {\n       const response = yield newsApi.getNews(page, newsAtPage);\n        yield put(newsActions.setNews(response.data))\n   } catch (e) {\n       if (e.message.includes('500'))\n       error('Pankratiew server fucked up');\n       else error('Something went wrong')\n\n   }\n\n}\n\nfunction* sagas() {\n    yield all([\n        takeLatest(NEWS_ACTION_TYPES.GET, getNews),\n    ]);\n}\nexport  const  newsSagas = sagas;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './auth/authSlice';\nimport newsReducer from './news/newsSlice'\n\nexport const createRootReducer = history =>\n    combineReducers({\n        form: formReducer,\n        router: connectRouter(history),\n        auth: authReducer,\n        news: newsReducer\n\n    });\n","import { all, fork } from 'redux-saga/effects';\n\nimport { authSagas } from './auth/authSaga';\nimport {newsSagas} from './news/newsSagas';\n\nexport const rootSaga = function* rootSaga() {\n  yield all([\n    fork(authSagas),\n    fork(newsSagas)\n  ]);\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { rootSaga } from './rootSaga';\nimport { createRootReducer } from './rootReducer';\nimport history from '../helpers/history';\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(\n    createRootReducer(history),\n    composeWithDevTools(\n        applyMiddleware(\n            routerMiddleware(history),\n            sagaMiddleware,\n        ),\n    ),\n);\n\nstore.runSaga = saga => {\n    return sagaMiddleware.run(saga);\n};\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react'\nimport './auth.scss'\nimport { Field, reduxForm } from 'redux-form'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authActions} from \"../../redux/auth/authSlice\";\nimport formValueSelector from \"redux-form/lib/formValueSelector\";\nimport {cn} from '@bem-react/classname'\nimport logo from '../../static-photos/2x/logo.png'\n\nconst authPageCn = cn('auth-page');\nexport const Auth= () =>{\n\n    const dispatch = useDispatch();\n    const promoCodeForm = formValueSelector('authForm');\n    const loginSelector = state => promoCodeForm(state, 'login');\n    const passwordSelector = state => promoCodeForm(state, 'password');\n    const password = useSelector(passwordSelector);\n    const login = useSelector(loginSelector);\n\n    const handleForm  = e =>{\n        e.preventDefault();\n\n    dispatch(authActions.auth({login, password}));};\n    return(<div className={authPageCn('container')}>\n            <div className={authPageCn('content')}>\n                <img className={authPageCn('logo')} src={logo} alt={'слепые сосать'}/>\n                <form onSubmit={ e =>handleForm(e)} className={authPageCn('input-form')}>\n                    <div className={authPageCn('login')}>\n                        {/*<LoginIcon className={authPageCn('login-icon')}/>*/}\n                        {/*<div className={authPageCn('login-icon')}>a</div>*/}\n                        <Field\n                            className={authPageCn('login-input') + ' ' + authPageCn('input')    }\n                            name=\"login\"\n                            component=\"input\"\n                            placeholder=\"Логин\"\n                        />\n                    </div>\n\n\n                    <Field\n                        className={authPageCn('password-input') + ' ' + authPageCn('input') }\n                        name=\"password\"\n                        component=\"input\"\n                        type='password'\n                        placeholder=\"Пароль\"\n                    />\n                    <button className={authPageCn('login-button')}>ВОЙТИ</button>\n                </form>\n            </div>\n\n\n        </div>\n    )\n}\nexport const AuthPage = reduxForm({\n    form: 'authForm',\n})(Auth);\n","import { createSelector } from 'reselect';\n\n\nexport const getNewsSelector = createSelector(\n    [state => state.news.news],\n    news=>news\n)\n","import  React from \"react\"\nimport './NewsPost.scss'\nimport ReactMarkdown from 'react-markdown';\nimport {cn} from \"@bem-react/classname\";\nconst PostCn = cn('news-post');\nexport const NewsPost = ({id, title, content, published, loaded, source, url, urlToImage }) =>{\n    return (<div key={id} className={PostCn('container')}>\n\n        <a href={url} className={PostCn('title')}>\n            {title.match(/BRSM/i) ? '💩': '' }{title.length >0 ? title : url}{title.match(/BRSM/i) ? '💩': '' }\n        </a>\n\n        <div >\n            <ReactMarkdown className={PostCn('content')} source={content} linkTarget='_blank' disallowedTypes={['image']} />\n        </div>\n    </div>)\n}\n","import  React, {useEffect} from \"react\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {newsActions} from '../../redux/news/newsSlice.js'\nimport {getNewsSelector} from \"../../redux/news/newsSelectors\";\nimport {cn} from \"@bem-react/classname\";\nimport './News.scss'\nimport {NewsPost} from \"./NewsPost/NewsPost\";\nconst NewsCN = cn('news');\nexport const News = () =>{\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        dispatch(newsActions.getNews({page: 1, newsAtPage: 20}))\n    }, [dispatch])\n    const news = useSelector(getNewsSelector).map((el)=>{\n        return (<NewsPost  {...el}/>)\n    });\n\nreturn(<div className={NewsCN('container')}>\n    {news}\n</div>)\n\n}\n","import React from 'react';\nimport {cn} from '@bem-react/classname'\nimport './Header.scss'\nimport {Link} from \"react-router-dom\";\n\nconst headerCN = cn('header');\nexport  const Header = props =>{\n     const {pathname} = props.location;\n\n\n  return (<div className={headerCN('container')}>\n      <Link to={'/home'} className={headerCN('logo')}>Студент БГУИР</Link>\n      <div className={headerCN('menu-container')}>\n          <nav className={headerCN('nav')}>\n              <Link className={headerCN('link', {active: pathname==='/news' })}  to={'/news'}>Новости</Link>\n              <Link className={headerCN('link',{active: pathname==='/erad' })} to={'/erad'}>Эруды</Link>\n              <Link className={headerCN('link',{active: pathname==='/rating' })} to={'/rating'}>Рейтинг</Link>\n              <Link className={headerCN('link',{active: pathname==='/files' })} to={'/files'}>Файлы</Link>\n              <Link className={headerCN('link',{active: pathname==='/free-rooms' })} to={'/free-rooms'}>Свободные аудитории</Link>\n\n          </nav>\n          <span className={'profile'}></span>\n      </div>\n  </div>)\n};\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Routes } from '../const/Routes';\nimport {Header} from \"./Header/Header\";\n\nexport const AuthorizedRoute = props => {\n    const { component: Component, isAuthorized, ...rest } = props;\n        console.log('lol')\n    return (\n        <Route\n            {...rest}\n            render={routeProps => {\n                if (isAuthorized) {\n                    return (\n                        <>\n                            <Header {...routeProps}/>\n                            <Component {...routeProps} />\n                        </>\n                    );\n                }\n                return <Redirect to={Routes.EmptyRoute} />;\n            }}\n        />\n    );\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { Routes } from '../const/Routes.js';\nexport const NonAuthorizedRoute = props => {\n    const { component: Component, isAuthorized, ...rest } = props;\n\n    return (\n        <Route\n            {...rest}\n            render={routeProps => {\n                if (!isAuthorized) {\n                    return (\n                        <>\n                            <Component {...routeProps} />\n                        </>\n                    );\n                }\n                return <Redirect to={Routes.MainRoute} />;\n            }}\n        />\n    );\n};\n","import { createSelector } from 'reselect';\n\nexport const getUserIdSelector = createSelector(\n    [state => state.auth.userId],\n    userId => userId,\n);\n\nexport const isAuthorizedSelector = createSelector(\n    [state => state.auth],\n    authReducer => !!authReducer.token,\n);\n","import React from \"react\"\nimport {useDispatch} from \"react-redux\";\nimport {newsActions} from '../../redux/news/newsSlice.js'\nexport const FreeRooms = () =>{\n    const dispatch = useDispatch();\n\n    return('asdf')\n}\n","import './App.scss';\n\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Redirect } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport {AuthPage} from './components/auth/auth';\n\nimport {News} from './components/News/News';\nimport { Routes } from './const/Routes';\n\nimport { AuthorizedRoute } from './components/AuthorizedRoute';\nimport { NonAuthorizedRoute } from './components/NonAuthorizedRoute';\n\nimport { isAuthorizedSelector } from './redux/auth/authSelectors';\nimport {FreeRooms} from \"./components/FreeRooms/FreeRooms\";\n\nfunction App(props) {\n  const { isAuthorized, location } = props;\n\n    return (\n        <div className={`theme`}>\n            <ToastContainer />\n          <Switch location={location}>\n            <NonAuthorizedRoute exact={true} path={'/'} component={AuthPage} isAuthorized={isAuthorized} />\n              <AuthorizedRoute path={Routes.MainRoute} component={News} isAuthorized={isAuthorized} withNavigation />\n              <AuthorizedRoute path={Routes.FreeRooms} component={FreeRooms} isAuthorized={isAuthorized} withNavigation />\n              <AuthorizedRoute path={Routes.Erud} component={News} isAuthorized={isAuthorized} withNavigation />\n              <AuthorizedRoute path={Routes.Files} component={News} isAuthorized={isAuthorized} withNavigation />\n              <AuthorizedRoute path={Routes.Rating} component={News} isAuthorized={isAuthorized} withNavigation />\n              <Redirect to={Routes.MainRoute} />\n          </Switch>\n        </div>\n    );\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthorized: isAuthorizedSelector(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {Provider} from 'react-redux';\nimport {Router} from 'react-router-dom';\nimport {store} from './redux/store';\nimport history from './helpers/history';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ConnectedRouter} from \"connected-react-router\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Router history={history}>\n                <App/>\n            </Router>\n        </ConnectedRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}